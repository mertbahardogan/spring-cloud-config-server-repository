server.port= 0
spring.application.name= film-controller

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto= update
spring.jpa.hibernate.show-sql= true
spring.datasource.url= jdbc:postgresql://localhost:5432/netflix
spring.datasource.username= postgres
spring.datasource.password= 1357
spring.jpa.properties.javax.persistence.validation.mode= none

spring.kafka.producer.bootstrap-servers = localhost:19092
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer

spring.zipkin.base-url=http://localhost:9411/

ms.topic.process=crudProcessTopic

eureka.client.serviceUrl.defaultZone= http://localhost:8761/eureka/
eureka.instance.instance-id= ${spring.application.name}:${instanceId:${random.value}}

management.endpoints.web.base-path= /actuator
management.endpoints.web.exposure.include= health, prometheus
management.endpoints.web.path-mapping.prometheus= metrics
management.endpoint.health.show-details= always
management.endpoint.prometheus.cache.time-to-live= 1ms


keycloak.realm                      = Film
keycloak.auth-server-url            = host.docker.internal:9091/auth/
keycloak.ssl-required               = external
keycloak.resource                   = springboot-microservice
keycloak.credentials.secret         = 438e479d-1419-47c7-adee-0bcfa6a3b747
keycloak.use-resource-role-mappings = true
keycloak.bearer-only                = true
#localhost:9091  8081   denendi: 13204